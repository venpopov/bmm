% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_model.R
\name{fit_model}
\alias{fit_model}
\title{Fit Measurement Models using BRMS}
\usage{
fit_model(
  formula,
  data,
  model,
  parallel = FALSE,
  chains = 4,
  prior = NULL,
  silent = getOption("bmm.silent", 1),
  ...
)
}
\arguments{
\item{formula}{An object of class \code{bmmformula}. A symbolic description of the
model to be fitted.}

\item{data}{An object of class data.frame, containing data of all variables
used in the model. The names of the variables must match the variable names
passed to the \code{bmmmodel} object for required argurments.}

\item{model}{A description of the model to be fitted. This is a call to a
\code{bmmmodel} such as \code{mixture3p()} function. Every model function has a
number of required arguments which need to be specified within the function
call. Call \code{\link[=supported_models]{supported_models()}} to see the list of supported models and
their required arguments}

\item{parallel}{Logical; If TRUE, the number of cores on your machine will be
detected and brms will fit max(chains, cores) number of chains (specified
by the \code{chain} argument) in parallel using the parallel package}

\item{chains}{Numeric. Number of Markov chains (defaults to 4)}

\item{prior}{One or more \code{brmsprior} objects created by \code{\link[brms:set_prior]{brms::set_prior()}}
or related functions and combined using the c method or the + operator. See
also \code{\link[=get_model_prior]{get_model_prior()}} for more help. Not necessary for the default model
fitting, but you can provide prior constraints to model parameters}

\item{silent}{Verbosity level between 0 and 2. If 1 (the default), most of the
informational messages of compiler and sampler are suppressed. If 2, even
more messages are suppressed. The actual sampling progress is still
printed. Set refresh = 0 to turn this off as well. If using backend =
"rstan" you can also set open_progress = FALSE to prevent opening
additional progress bars.}

\item{...}{Further arguments passed to \code{\link[brms:brm]{brms::brm()}} or Stan. See the
description of \code{\link[brms:brm]{brms::brm()}} for more details}
}
\value{
An object of class brmsfit which contains the posterior draws along
with many other useful information about the model. Use methods(class =
"brmsfit") for an overview on available methods.
}
\description{
Fit a Bayesian multilevel measurement model. Currently
implemented are the two-parameter mixture model by Zhang and Luck (2008),
the three-parameter mixture model by Bays et al (2009), and three different
versions of the Interference Measurement Model (Oberauer et al., 2017).
This is a wrapper function for \link[brms:brm]{brms::brm}, which is used to estimate the
model.
}
\details{
The following models are supported:
\itemize{
\item \code{IMMabc(resp_err, nt_features, setsize)}
\item \code{IMMbsc(resp_err, nt_features, nt_distances, setsize)}
\item \code{IMMfull(resp_err, nt_features, nt_distances, setsize)}
\item \code{mixture2p(resp_err)}
\item \code{mixture3p(resp_err, nt_features, setsize)}
\item \code{sdmSimple(resp_err)}
}

Type \code{?modelname} to get information about a specific model, e.g. \code{?IMMfull}

Type \code{help(package=bmm)} for a full list of available help topics.
}
\examples{
\dontrun{
# generate artificial data from the Signal Discrimination Model
dat <- data.frame(y=rsdm(n=2000))

# define formula
ff <- bmmformula(c ~ 1,
                 kappa ~ 1)

# fit the model
fit <- fit_model(formula = ff,
                 data = dat,
                 model = sdmSimple(resp_err = "y"),
                 parallel=T,
                 iter=500,
                 backend='cmdstanr')
}

}
\references{
Frischkorn, G. T., & Popov, V. (2023). A tutorial for estimating
mixture models for visual working memory tasks in brms: Introducing the
Bayesian Measurement Modeling  (bmm) package for R.
https://doi.org/10.31234/osf.io/umt57
}
\seealso{
\code{\link[=supported_models]{supported_models()}}, \code{\link[brms:brm]{brms::brm()}}
}
